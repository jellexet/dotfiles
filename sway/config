# Part of git.sr.ht/~begs/dotfiles.
# See `man 5 sway` for a complete reference.

# Variables
set {
	# Logo key. Use Mod1 for Alt.
	$mod Mod4

	# Home row direction keys, like vi
	$left	h
	$down	j
	$up	k
	$right	l

	# Terminal emulator
	$term footclient
	# Floating terminal emulator
	$floating_term $term -a floating_foot

	# Application launcher
	$launcher fuzzel -p "exec> "
	# Interactive menu
	$menu fuzzel -dp "menu> "

	# Font
	$font "JetBrains Mono"
	$font_size 10
}

### General configuration

# Run pure wayland session (causes warning on config reload)
#xwayland disable

# Gaps settings
smart_gaps on
gaps {
	inner 10
	outer 0
}

# Border settings
# normal = w/ titlebar, pixel = w/o titlebar, none = disable
smart_borders on
default_border pixel 2
default_floating_border normal 2

# Titlebar font
font $font Bold $font_size

# Titlebar settings
titlebar_border_thickness 0
titlebar_padding 10 1

# Switch to previous workspace if selected current again
workspace_auto_back_and_forth yes

### Output configuration
# See `man 5 sway-output`

# Random wallpaper
output * bg `find ~/.wallpaper -type f | shuf -n 1` fill #282828

### Idle configuration
# See `man swayidle`

# Start idle tracker
exec swayidle -w \
	timeout 600 'chayang -d10 && swaymsg "output * power off" && swaylock' \
		resume 'swaymsg "output * power on"' \
	before-sleep swaylock

### Input configuration
# See `man 5 sway-input`

# Seat configuration
seat seat0 {
	xcursor_theme Adwaita 24
	idle_wake keyboard
	hide_cursor 4000
}

# Mouse
input type:pointer {
	accel_profile flat
	#pointer_accel -0.2
}

# Keyboard
input type:keyboard {
	xkb_layout us,ru
	xkb_options grp:caps_toggle
}

# Touchpad
input type:touchpad {
	accel_profile flat
	tap enabled
	dwt enabled
	tap_button_map lrm
	natural_scroll enabled
}

### Apperance

# Colors (gruvbox theme)
set {
	$black		#282828
	$red		#cc241d
	$green		#98971a
	$yellow		#d79921
	$blue		#458588
	$purple		#b16286
	$aqua		#689d6a
	$gray		#a89984
	$brgray		#928374
	$brred		#fb4934
	$brgreen	#b8bb26
	$bryellow	#fabd2f
	$brblue		#83a598
	$brpurple	#d3869b
	$braqua		#8ec07c
	$white		#ebdbb2

	$a		e0
	$focused	$braqua
	$inactive	$purple
	$unfocused	$black
	$urgent		$yellow
}

# Border colors (see `man 5 sway`)
# class			border		titlebar bg	text	indicator
client.focused		$focused	$focused	$black	$brred
client.focused_inactive $inactive	$inactive	$white	$red
client.unfocused	$unfocused	$unfocused	$white	$red
client.urgent		$urgent		$urgent		$black	$red

# Set GTK theme
exec_always gsettings set org.gnome.desktop.interface {
	gtk-theme		'Adwaita'
	icon-theme		'Adwaita'
	gtk-color-scheme	'dark'
	font-name		"$font $font_size"
	monospace-font-name	"$font $font_size"
	cursor-theme		'Adwaita'
	cursor-size		'24'
}

# Status bar (see `man 5 sway-bar`)
bar {
	swaybar_command waybar
	position top
	mode dock
}

### Touchpad bindings

bindgesture {
	# Workspaces
	swipe:3:right workspace prev
	swipe:3:left workspace next

	# Kill active window
	swipe:3:down kill

	# Toggle floating
	swipe:3:up floating toggle

	# Scratchpad
	pinch:2:inward+down move scratchpad
	pinch:2:outward+up scratchpad show

	# Move active window
	swipe:4:left move left
	swipe:4:right move right
	swipe:4:up move up
	swipe:4:down move down
}

### Key bindings

# File manager
bindsym --to-code $mod+o exec $floating_term lf

# Find and go to window
bindsym --to-code $mod+g exec swaymsg -t get_tree | \
	jq -r '.. | objects | select(has("app_id")) | \
		(.id | tostring | (. + " " * (6 - length))) + .name' | \
	sort -rn | $menu | cut -d' ' -f1 | \
	xargs -I{} swaymsg "[con_id={}] focus"

# Make a screenshot and copy to clipboard
bindsym --to-code {
	# Full screen
	$mod+p exec grim - | wl-copy --type image/png
	# Same with a media key
	Print exec grim - | wl-copy --type image/png

	# Area
	$mod+Shift+p exec swaymsg -t get_tree | jq -r \
		'.. | select(.pid? and .visible?) | .rect | \
			"\(.x),\(.y) \(.width)x\(.height)"' | \
		slurp -b "$unfocused$a" -c "$focused" -B "$inactive$a" | \
		grim -g- - | wl-copy -t image/png
	# Same with a media key
	XF86SelectiveScreenshot exec swaymsg -t get_tree | jq -r \
		'.. | select(.pid? and .visible?) | .rect | \
			"\(.x),\(.y) \(.width)x\(.height)"' | \
		slurp -b "$unfocused$a" -c "$focused" -B "$inactive$a" | \
		grim -g- - | wl-copy -t image/png

	# Current view
	$mod+Ctrl+p exec swaymsg -t get_tree | jq -r \
		'.. | select(.pid? and .focused?) | .rect | \
			"\(.x),\(.y) \(.width)x\(.height)"' | \
		grim -g- - | wl-copy -t image/png
}

# Media keys
bindsym --locked {
	# Brightness
	XF86MonBrightnessDown exec light -T 0.72
	XF86MonBrightnessUp exec light -T 1.4

	# Sound
	XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +1%
	XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -1%
	XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
	XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

	# Media playback
	XF86AudioPlay exec playerctl play-pause
	XF86AudioNext exec playerctl next
	XF86AudioPrev exec playerctl previous
	XF86AudioStop exec playerctl stop
	Pause exec playerctl pause

	# Dismiss notifications
	XF86NotificationCenter exec makoctl dismiss -a
}

# General actions
bindsym --to-code {
	# Start a terminal
	$mod+Return exec $term
	# Start a floating terminal
	$mod+Shift+Return exec $floating_term

	# Kill focused window
	$mod+Shift+q kill

	# Start a launcher
	$mod+d exec $launcher
	# Same with a media key
	XF86Favorites exec $launcher

	# Reload the configuration file
	$mod+Shift+c reload

	# Exit sway
	$mod+Shift+e exit
}

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Movement
bindsym --to-code {
	# Move your focus around
	$mod+$left focus left
	$mod+$down focus down
	$mod+$up focus up
	$mod+$right focus right
	# Or use $mod+[up|down|left|right]
	$mod+Left focus left
	$mod+Down focus down
	$mod+Up focus up
	$mod+Right focus right

	# Move the focused window with the same, but add Shift
	$mod+Shift+$left move left
	$mod+Shift+$down move down
	$mod+Shift+$up move up
	$mod+Shift+$right move right
	# Ditto, with arrow keys
	$mod+Shift+Left move left
	$mod+Shift+Down move down
	$mod+Shift+Up move up
	$mod+Shift+Right move right
}

# Workspaces
bindsym {
	# Switch to workspace
	$mod+1 workspace 1
	$mod+2 workspace 2
	$mod+3 workspace 3
	$mod+4 workspace 4
	$mod+5 workspace 5
	$mod+6 workspace 6
	$mod+7 workspace 7
	$mod+8 workspace 8
	$mod+9 workspace 9
	$mod+0 workspace 10
	# Move focused container to workspace
	$mod+Shift+1 move container to workspace 1
	$mod+Shift+2 move container to workspace 2
	$mod+Shift+3 move container to workspace 3
	$mod+Shift+4 move container to workspace 4
	$mod+Shift+5 move container to workspace 5
	$mod+Shift+6 move container to workspace 6
	$mod+Shift+7 move container to workspace 7
	$mod+Shift+8 move container to workspace 8
	$mod+Shift+9 move container to workspace 9
	$mod+Shift+0 move container to workspace 10

	# Relative focus movement
	$mod+Ctrl+$up workspace prev_on_output
	$mod+Ctrl+$down workspace next_on_output
	# Same with arrow keys
	$mod+Ctrl+Up workspace prev_on_output
	$mod+Ctrl+Down workspace next_on_output
	# Same with mouse wheel
	--whole-window $mod+button4 workspace prev_on_output
	--whole-window $mod+button5 workspace next_on_output

	# Relative container movement
	$mod+Ctrl+Shift+$up move container to workspace prev_on_output
	$mod+Ctrl+Shift+$down move container to workspace next_on_output
	# Same with arrow keys
	$mod+Ctrl+Shift+Up move container to workspace prev_on_output
	$mod+Ctrl+Shift+Down move container to workspace next_on_output
	# Same with mouse wheel
	--whole-window $mod+Shift+button4 move container to workspace prev_on_output
	--whole-window $mod+Shift+button5 move container to workspace next_on_output
}

# Outputs
bindsym {
	# Move focus between outputs
	$mod+Ctrl+$left focus output left
	$mod+Ctrl+$right focus output right
	# Same with arrow keys
	$mod+Ctrl+Left focus output left
	$mod+Ctrl+Right focus output right

	# Move the focused workspace between outputs
	$mod+Ctrl+Shift+$left move workspace to output left
	$mod+Ctrl+Shift+$right move workspace to output right
	# Same with arrow keys
	$mod+Ctrl+Shift+Left move workspace to output left
	$mod+Ctrl+Shift+Right move workspace to output right
}

# Layout stuff
bindsym --to-code {
	# You can "split" the current object of your focus with
	# $mod+b or $mod+v, for horizontal and vertical splits
	# respectively.
	$mod+b splith
	$mod+v splitv

	# Switch the current container between different layout styles
	$mod+s layout stacking
	$mod+w layout tabbed
	$mod+e layout toggle split

	# Make the current focus fullscreen
	$mod+f fullscreen
	# Make the current focus fullscreen across all outputs
	$mod+Shift+f fullscreen global

	# Toggle the current focus between tiling and floating mode
	$mod+Shift+space floating toggle

	# Swap focus between the tiling area and the floating area
	$mod+space focus mode_toggle

	# Move focus to the parent container
	$mod+a focus parent
}

# Scratchpad
bindsym {
	# Move the currently focused window to the scratchpad
	$mod+Shift+minus move scratchpad

	# Show the next scratchpad window or hide the focused scratchpad
	# window. If there are multiple scratchpad windows, this command
	# cycles through them.
	$mod+minus scratchpad show
}

# Resizing containers
mode "resize" {
	bindsym --to-code {
		# left will shrink the containers width
		# right will grow the containers width
		# up will shrink the containers height
		# down will grow the containers height
		$left resize shrink width 10px
		$down resize grow height 10px
		$up resize shrink height 10px
		$right resize grow width 10px

		# Ditto, with arrow keys
		Left resize shrink width 10px
		Down resize grow height 10px
		Up resize shrink height 10px
		Right resize grow width 10px

		# Return to default mode
		Return mode "default"
		Escape mode "default"
	}
}
bindsym --to-code $mod+r mode "resize"

# Ignore all bindings
mode "passthrough" {
	bindsym $mod+Equal mode "default"
}
bindsym $mod+Equal mode "passthrough"

# System setup
mode "config" {
	bindsym --to-code {
		# Machine state
		p exec loginctl poweroff; mode "default"
		r exec loginctl reboot; mode "default"
		--release s exec loginctl suspend; mode "default"
		--release l exec pkill -USR1 swayidle; mode "default"

		# Brightness
		b exec light -T 1.4
		Shift+b exec light -T 0.72

		# Sound
		v exec pactl set-sink-volume @DEFAULT_SINK@ +1%
		Shift+v exec pactl set-sink-volume @DEFAULT_SINK@ -1%
		m exec pactl set-sink-mute @DEFAULT_SINK@ toggle
		Shift+m exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

		# Media playback
		z exec playerctl previous
		x exec playerctl play-pause
		c exec playerctl next

		# Dismiss notifications
		n exec makoctl dismiss -a

		# Return to default mode
		Return mode "default"
		Escape mode "default"
	}
}
bindsym --to-code $mod+c mode "config"

### Service

# Per window actions
for_window [app_id="^floating_foot$"] floating enable

# Autostart
exec_always {
	# D-Bus session
	pgrep -xf 'dbus-daemon --session' || dbus-daemon --session \
		--address=unix:path=$XDG_RUNTIME_DIR/bus &

	# Foot server, so we can use footclient as term
	pgrep -xf 'foot --server' || \
		foot --server --log-no-syslog --log-level=warning &

	# Dynamic output manager
	pgrep -x kanshi && pkill -SIGHUP kanshi || kanshi &

	# PipeWire
	pgrep -x wireplumber || /usr/libexec/pipewire-launcher &

	# Gamma adjustment
	pgrep -x wlsunset || wlsunset -l60 -L30 &
}

# Include additional configs
include {
	/etc/sway/config.d/*
	~/.config/sway/config.d/*
	~/.config/sway/device/`hostname`
}
